name: build

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.3

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Download dependencies
        run: |
          sudo apt update && sudo apt install -y build-essential libpng-dev protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2

      - name: Go Generate
        run: go generate -tags tools -x ./...

      - name: Build
        run: go build -v -o api-linux-amd64 cmd/api/serve.go
        env:
          CGO_ENABLED: 1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.3

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Download dependencies
        run: |
          sudo apt update && sudo apt install -y build-essential libpng-dev protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2

      - name: Go Generate
        run: go generate -tags tools -x ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.59.1
          skip-pkg-cache: true
          skip-build-cache: true
          args: --timeout 5m

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Download dependencies
        run: |
          sudo apt update && sudo apt install -y build-essential libpng-dev protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2

      - name: Go Generate
        run: go generate -tags tools -x ./...

      - name: Start stack
        run: docker-compose -f docker-compose-dev.yml up -d

      - name: Setup Minio
        run: |
          go install github.com/minio/mc@latest
          mc alias set local http://localhost:9000 minio minio123
          mc admin user svcacct add local minio --access-key REPLACE_ME_KEY --secret-key REPLACE_ME_SECRET
          mc anonymous set public local/smr

      - name: Test
        run: go test -v -coverprofile=coverage.txt -covermode=atomic -coverpkg=./... ./...
        env:
          CGO_ENABLED: 1
          REPO_PASETO.PUBLIC_KEY: 408c5155a389aeabf1c1b0da73ff5a3079b6aa6628e4c661b1e1ce412181cc8a
          REPO_PASETO.PRIVATE_KEY: a5f7409588f6b72d443db0d432f37f1214a5ec88cb55a70e24b90194ed549465408c5155a389aeabf1c1b0da73ff5a3079b6aa6628e4c661b1e1ce412181cc8a
          REPO_FEATURE_FLAGS.ALLOW_MULTI_TARGET_UPLOAD: "true"

      - name: Codecov
        uses: codecov/codecov-action@v1