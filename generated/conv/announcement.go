// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package conv

import (
	generated "github.com/satisfactorymodding/smr-api/generated"
	ent "github.com/satisfactorymodding/smr-api/generated/ent"
)

type AnnouncementImpl struct{}

func (c *AnnouncementImpl) Convert(source *ent.Announcement) *generated.Announcement {
	var pGeneratedAnnouncement *generated.Announcement
	if source != nil {
		var generatedAnnouncement generated.Announcement
		generatedAnnouncement.ID = (*source).ID
		generatedAnnouncement.Message = (*source).Message
		generatedAnnouncement.Importance = generated.AnnouncementImportance((*source).Importance)
		pGeneratedAnnouncement = &generatedAnnouncement
	}
	return pGeneratedAnnouncement
}
func (c *AnnouncementImpl) ConvertSlice(source []*ent.Announcement) []*generated.Announcement {
	var pGeneratedAnnouncementList []*generated.Announcement
	if source != nil {
		pGeneratedAnnouncementList = make([]*generated.Announcement, len(source))
		for i := 0; i < len(source); i++ {
			pGeneratedAnnouncementList[i] = c.Convert(source[i])
		}
	}
	return pGeneratedAnnouncementList
}
