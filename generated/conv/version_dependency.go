// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

package conv

import (
	generated "github.com/satisfactorymodding/smr-api/generated"
	ent "github.com/satisfactorymodding/smr-api/generated/ent"
)

type VersionDependencyImpl struct{}

func (c *VersionDependencyImpl) Convert(source *ent.VersionDependency) *generated.VersionDependency {
	var pGeneratedVersionDependency *generated.VersionDependency
	if source != nil {
		var generatedVersionDependency generated.VersionDependency
		generatedVersionDependency.VersionID = (*source).VersionID
		generatedVersionDependency.ModID = (*source).ModID
		generatedVersionDependency.Condition = (*source).Condition
		generatedVersionDependency.Optional = (*source).Optional
		pGeneratedVersionDependency = &generatedVersionDependency
	}
	return pGeneratedVersionDependency
}
func (c *VersionDependencyImpl) ConvertSlice(source []*ent.VersionDependency) []*generated.VersionDependency {
	var pGeneratedVersionDependencyList []*generated.VersionDependency
	if source != nil {
		pGeneratedVersionDependencyList = make([]*generated.VersionDependency, len(source))
		for i := 0; i < len(source); i++ {
			pGeneratedVersionDependencyList[i] = c.Convert(source[i])
		}
	}
	return pGeneratedVersionDependencyList
}
