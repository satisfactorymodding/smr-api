// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package conv

import (
	generated "github.com/satisfactorymodding/smr-api/generated"
	ent "github.com/satisfactorymodding/smr-api/generated/ent"
)

type SatisfactoryVersionImpl struct{}

func (c *SatisfactoryVersionImpl) Convert(source *ent.SatisfactoryVersion) *generated.SatisfactoryVersion {
	var pGeneratedSatisfactoryVersion *generated.SatisfactoryVersion
	if source != nil {
		var generatedSatisfactoryVersion generated.SatisfactoryVersion
		generatedSatisfactoryVersion.ID = (*source).ID
		generatedSatisfactoryVersion.Version = (*source).Version
		generatedSatisfactoryVersion.EngineVersion = (*source).EngineVersion
		pGeneratedSatisfactoryVersion = &generatedSatisfactoryVersion
	}
	return pGeneratedSatisfactoryVersion
}
func (c *SatisfactoryVersionImpl) ConvertSlice(source []*ent.SatisfactoryVersion) []*generated.SatisfactoryVersion {
	var pGeneratedSatisfactoryVersionList []*generated.SatisfactoryVersion
	if source != nil {
		pGeneratedSatisfactoryVersionList = make([]*generated.SatisfactoryVersion, len(source))
		for i := 0; i < len(source); i++ {
			pGeneratedSatisfactoryVersionList[i] = c.Convert(source[i])
		}
	}
	return pGeneratedSatisfactoryVersionList
}
