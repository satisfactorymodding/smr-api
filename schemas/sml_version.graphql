### Types

scalar SMLVersionID

type SMLVersion {
    id: SMLVersionID!
    version: String!
    satisfactory_version: Int!
    stability: VersionStabilities!
    link: String!
    targets: [SMLVersionTarget]!
    changelog: String!
    date: Date!
    bootstrap_version: String
    engine_version: String!

    updated_at: Date!
    created_at: Date!
}

type SMLVersionTarget {
    VersionID: SMLVersionID!
    targetName: TargetName!
    link: String!
}

type GetSMLVersions {
    sml_versions: [SMLVersion!]!
    count: Int!
}

enum SMLVersionFields {
    name
    created_at
    updated_at
    satisfactory_version
    date
}

### Inputs

input SMLVersionFilter {
    limit: Int
    offset: Int
    order_by: SMLVersionFields
    order: Order
    search: String
    ids: [String!]
}

### Queries

extend type Query {
    getSMLVersion(smlVersionID: SMLVersionID!): SMLVersion @deprecated(reason: "SML is now a mod")
    getSMLVersions(filter: SMLVersionFilter): GetSMLVersions! @deprecated(reason: "SML is now a mod")
}

### Mutations

