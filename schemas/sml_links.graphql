### Types

scalar SMLLinkID

type SMLLink {
    id: SMLLinkID!
    SMLVersionLinkID: String!
    platform: String!
    link: String!
}

enum SMLLinkFields {
    platform
}

type GetSMLLinks {
    arch: [SMLLink!]!
}

### Inputs

input SMLLinkFilter {
    limit: Int
    offset: Int
    order_by: SMLLinkFields
    order: Order
    search: String
    ids: [String!]
}

input NewSMLLink {
    id: SMLLinkID!
    SMLVersionLinkID: String!
    platform: String!
    link: String!
}

input UpdateSMLLink {
    id: SMLLinkID!
    SMLVersionLinkID: String!
    platform: String!
    link: String!
}

### Queries

extend type Query {
    getSMLLink(smlVersionId: SMLVersionID!): SMLLink
    getSMLLinks(filter: SMLLinkFilter): GetSMLLinks!

    getSMLDownload(SMLVersionLinkID: String!, platform: String!): String!
}

### Mutations

extend type Mutation {
    createSMLLink(smlLink: NewSMLLink!): SMLLink! @canEditSMLVersions @isLoggedIn
    updateSMLLink(SMLLinksId: SMLLinkID!, smlLink: UpdateSMLLink!): SMLLink! @canEditSMLVersions @isLoggedIn
    deleteSMLLink(SMLLinksId: SMLLinkID!): Boolean! @canEditSMLVersions @isLoggedIn
}