### Types

scalar ModLinkID

type ModLink {
    id: ModLinkID!
    ModVersionLinkID: String!
    platform: String!
    side: String!
    link: String!
    size: Int
    hash: String
}

### Inputs

input NewModLink {
    id: ModLinkID
    ModVersionLinkID: String!
    platform: String!
    side: String!
    link: String!
    size: Int
    hash: String
}

input UpdateModLink {
    id: ModLinkID!
    ModVersionLinkID: String!
    platform: String!
    side: String!
    link: String!
    size: Int
    hash: String
}

### Queries

extend type Query {
    getModLink(id: ModVersionLinkID!): ModLink
}

### Mutations

extend type Mutation {
    createModLink(mod_link: NewModLink!): ModLink @isLoggedIn
    updateModLink(ModLinksId: ModVersionLinkID!, mod_link: UpdateModLink!): ModLink! @canEditMod(field: "versionId") @isLoggedIn
    deleteModLink(ModLinksId: ModVersionLinkID!): Boolean! @canEditMod(field: "versionId") @isLoggedIn
}